# Copyright (c) 2014 Jakub Jermar 
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# - Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the following disclaimer.
# - Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimer in the
#   documentation and/or other materials provided with the distribution.
# - The name of the author may not be used to endorse or promote products
#   derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

{
        name : context,

        includes : [
                {
                        include : <typedefs.h>
                }
        ],

        members : [
                #
                # Only save registers that must be preserved across function
                # calls.
                #
                {
                        name : sp,
                        type : uint32_t
                },
                {
                        name : pc,
                        type : uint32_t
                },

                {
                        name : s0,
                        type : uint32_t
                },
                {
                        name : s1,
                        type : uint32_t
                },
                {
                        name : s2,
                        type : uint32_t
                },
                {
                        name : s3,
                        type : uint32_t
                },
                {
                        name : s4,
                        type : uint32_t
                },
                {
                        name : s5,
                        type : uint32_t
                },
                {
                        name : s6,
                        type : uint32_t
                },
                {
                        name : s7,
                        type : uint32_t
                },
                {
                        name : s8,
                        type : uint32_t
                },
                {
                        name : gp,
                        type : uint32_t
                },

                {
                        name : ipl,
                        type : ipl_t
                }
        ]
}
