# Copyright (c) 2014 Jakub Jermar 
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# - Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the following disclaimer.
# - Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimer in the
#   documentation and/or other materials provided with the distribution.
# - The name of the author may not be used to endorse or promote products
#   derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

{
        name : istate,

        includes : [
                {
                        guard : KERNEL,
                        include : <typedefs.h>
                },
                {
                        negative-guard: KERNEL,
                        include : <sys/types.h>
                }
        ],

        members : [
                {
                        name : rax,
                        type : uint64_t
                },
                {
                        name : rbx,
                        type : uint64_t
                },
                {
                        name : rcx,
                        type : uint64_t
                },
                {
                        name : rdx,
                        type : uint64_t
                },
                {
                        name : rsi,
                        type : uint64_t
                },
                {
                        name : rdi,
                        type : uint64_t
                },
                {
                        name : rbp,
                        type : uint64_t
                },
                {
                        name : r8,
                        type : uint64_t
                },
                {
                        name : r9,
                        type : uint64_t
                },
                {
                        name : r10,
                        type : uint64_t
                },
                {
                        name : r11,
                        type : uint64_t
                },
                {
                        name : r12,
                        type : uint64_t
                },
                {
                        name : r13,
                        type : uint64_t
                },
                {
                        name : r14,
                        type : uint64_t
                },
                {
                        name : r15,
                        type : uint64_t
                },
                {
                        # align rbp_frame on multiple of 16
                        name : alignment,
                        type : uint64_t
                },
                {
                        # imitation of frame pointer linkage
                        name : rbp_frame,
                        type : uint64_t
                },
                {
                        # imitation of frame address linkage
                        name : rip_frame,
                        type : uint64_t
                },
                {
                        # real or fake error word
                        name : error_word,
                        type : uint64_t
                },
                {
                        name : rip,
                        type : uint64_t
                },
                {
                        name : cs,
                        type : uint64_t
                },
                {
                        name : rflags,
                        type : uint64_t
                },
                {
                        # only if istate_t is from uspace
                        name : rsp,
                        type : uint64_t
                },
                {
                        # only if istate_t is from uspace
                        name : ss,
                        type : uint64_t
                }
        ]
}
